#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DatabaseFlapper")]
public partial class DatabaseFlapperDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void InsertTableFlapper(TableFlapper instance);
  partial void UpdateTableFlapper(TableFlapper instance);
  partial void DeleteTableFlapper(TableFlapper instance);
  #endregion
	
	public DatabaseFlapperDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DatabaseFlapperConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DatabaseFlapperDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DatabaseFlapperDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DatabaseFlapperDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DatabaseFlapperDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<TableFlapper> TableFlapper
	{
		get
		{
			return this.GetTable<TableFlapper>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableFlapper")]
public partial class TableFlapper : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _牌号;
	
	private string _种类;
	
	private string _牌号描述;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void On牌号Changing(string value);
    partial void On牌号Changed();
    partial void On种类Changing(string value);
    partial void On种类Changed();
    partial void On牌号描述Changing(string value);
    partial void On牌号描述Changed();
    #endregion
	
	public TableFlapper()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_牌号", DbType="NVarChar(50)")]
	public string 牌号
	{
		get
		{
			return this._牌号;
		}
		set
		{
			if ((this._牌号 != value))
			{
				this.On牌号Changing(value);
				this.SendPropertyChanging();
				this._牌号 = value;
				this.SendPropertyChanged("牌号");
				this.On牌号Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_种类", DbType="NChar(10)")]
	public string 种类
	{
		get
		{
			return this._种类;
		}
		set
		{
			if ((this._种类 != value))
			{
				this.On种类Changing(value);
				this.SendPropertyChanging();
				this._种类 = value;
				this.SendPropertyChanged("种类");
				this.On种类Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_牌号描述", DbType="NVarChar(MAX)")]
	public string 牌号描述
	{
		get
		{
			return this._牌号描述;
		}
		set
		{
			if ((this._牌号描述 != value))
			{
				this.On牌号描述Changing(value);
				this.SendPropertyChanging();
				this._牌号描述 = value;
				this.SendPropertyChanged("牌号描述");
				this.On牌号描述Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
