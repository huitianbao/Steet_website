#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DatabaseHottingRolling")]
public partial class DatabaseHottingRollingDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void InsertTableHotting(TableHotting instance);
  partial void UpdateTableHotting(TableHotting instance);
  partial void DeleteTableHotting(TableHotting instance);
  #endregion
	
	public DatabaseHottingRollingDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DatabaseHottingRollingConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DatabaseHottingRollingDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DatabaseHottingRollingDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DatabaseHottingRollingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DatabaseHottingRollingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<TableHotting> TableHotting
	{
		get
		{
			return this.GetTable<TableHotting>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableHotting")]
public partial class TableHotting : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Id;
	
	private string _品名;
	
	private string _规格;
	
	private string _牌号;
	
	private string _产地_无限制_;
	
	private string _过磅价格;
	
	private string _理算价格;
	
	private string _地域_仓库;
	
	private string _备注;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void On品名Changing(string value);
    partial void On品名Changed();
    partial void On规格Changing(string value);
    partial void On规格Changed();
    partial void On牌号Changing(string value);
    partial void On牌号Changed();
    partial void On产地_无限制_Changing(string value);
    partial void On产地_无限制_Changed();
    partial void On过磅价格Changing(string value);
    partial void On过磅价格Changed();
    partial void On理算价格Changing(string value);
    partial void On理算价格Changed();
    partial void On地域_仓库Changing(string value);
    partial void On地域_仓库Changed();
    partial void On备注Changing(string value);
    partial void On备注Changed();
    #endregion
	
	public TableHotting()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_品名", DbType="NChar(10)")]
	public string 品名
	{
		get
		{
			return this._品名;
		}
		set
		{
			if ((this._品名 != value))
			{
				this.On品名Changing(value);
				this.SendPropertyChanging();
				this._品名 = value;
				this.SendPropertyChanged("品名");
				this.On品名Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_规格", DbType="NVarChar(50)")]
	public string 规格
	{
		get
		{
			return this._规格;
		}
		set
		{
			if ((this._规格 != value))
			{
				this.On规格Changing(value);
				this.SendPropertyChanging();
				this._规格 = value;
				this.SendPropertyChanged("规格");
				this.On规格Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_牌号", DbType="NVarChar(50)")]
	public string 牌号
	{
		get
		{
			return this._牌号;
		}
		set
		{
			if ((this._牌号 != value))
			{
				this.On牌号Changing(value);
				this.SendPropertyChanging();
				this._牌号 = value;
				this.SendPropertyChanged("牌号");
				this.On牌号Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[产地(无限制)]", Storage="_产地_无限制_", DbType="NVarChar(50)")]
	public string 产地_无限制_
	{
		get
		{
			return this._产地_无限制_;
		}
		set
		{
			if ((this._产地_无限制_ != value))
			{
				this.On产地_无限制_Changing(value);
				this.SendPropertyChanging();
				this._产地_无限制_ = value;
				this.SendPropertyChanged("产地_无限制_");
				this.On产地_无限制_Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_过磅价格", DbType="NChar(10)")]
	public string 过磅价格
	{
		get
		{
			return this._过磅价格;
		}
		set
		{
			if ((this._过磅价格 != value))
			{
				this.On过磅价格Changing(value);
				this.SendPropertyChanging();
				this._过磅价格 = value;
				this.SendPropertyChanged("过磅价格");
				this.On过磅价格Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_理算价格", DbType="NChar(10)")]
	public string 理算价格
	{
		get
		{
			return this._理算价格;
		}
		set
		{
			if ((this._理算价格 != value))
			{
				this.On理算价格Changing(value);
				this.SendPropertyChanging();
				this._理算价格 = value;
				this.SendPropertyChanged("理算价格");
				this.On理算价格Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[地域/仓库]", Storage="_地域_仓库", DbType="NVarChar(50)")]
	public string 地域_仓库
	{
		get
		{
			return this._地域_仓库;
		}
		set
		{
			if ((this._地域_仓库 != value))
			{
				this.On地域_仓库Changing(value);
				this.SendPropertyChanging();
				this._地域_仓库 = value;
				this.SendPropertyChanged("地域_仓库");
				this.On地域_仓库Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_备注", DbType="NVarChar(MAX)")]
	public string 备注
	{
		get
		{
			return this._备注;
		}
		set
		{
			if ((this._备注 != value))
			{
				this.On备注Changing(value);
				this.SendPropertyChanging();
				this._备注 = value;
				this.SendPropertyChanged("备注");
				this.On备注Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
